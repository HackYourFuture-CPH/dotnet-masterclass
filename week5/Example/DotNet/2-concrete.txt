using System.Text.Json;
using System.Text.Json.Serialization;

try
{
    JsonElement users = await FetchUsers();

    foreach (JsonElement user in users.EnumerateArray().Take(3))
    {
        Console.WriteLine(user.GetProperty("first_name").GetString());
    }
}
catch (Exception ex)
{
    Console.WriteLine(ex.Message + Environment.NewLine + ex.StackTrace);
}

async Task<JsonElement> FetchUsers()
{
    var fetchClient = new HttpClient();
    var data = await fetchClient.GetStringAsync("https://reqres.in/api/users");
    JsonSerializer.Deserialize<JsonElement>(data).TryGetProperty("data", out JsonElement users);
    
    return users;
}

    public class Datum
    {
        [JsonPropertyName("id")]
        public int Id { get; set; }

        [JsonPropertyName("email")]
        public string Email { get; set; }

        [JsonPropertyName("first_name")]
        public string FirstName { get; set; }

        [JsonPropertyName("last_name")]
        public string LastName { get; set; }

        [JsonPropertyName("avatar")]
        public string Avatar { get; set; }
    }

    public class Support
    {
        [JsonPropertyName("url")]
        public string Url { get; set; }

        [JsonPropertyName("text")]
        public string Text { get; set; }
    }

    public class Root
    {
        [JsonPropertyName("page")]
        public int Page { get; set; }

        [JsonPropertyName("per_page")]
        public int PerPage { get; set; }

        [JsonPropertyName("total")]
        public int Total { get; set; }

        [JsonPropertyName("total_pages")]
        public int TotalPages { get; set; }

        [JsonPropertyName("data")]
        public List<Datum> Data { get; set; }

        [JsonPropertyName("support")]
        public Support Support { get; set; }
    }

